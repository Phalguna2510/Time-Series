# Importing the dataset
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
load("C:/coding/r-ws/time series/.RData")
ts_data_zone1 <- ts(data$`Zone.1.Power.Consumption`, frequency = 144*30)
decomposed_ts_zone1 <- stl(ts_data_zone1, s.window = "periodic")
plot(decomposed_ts_zone1$time.series[, "seasonal"],
xlab = "Time",
ylab = "Seasonal Component",
xlim = c(1,4))
plot(decomposed_ts_zone1$time.series[, "seasonal"],
xlab = "Time",
ylab = "Seasonal Component")
load("C:/coding/r-ws/time series/.RData")
install.packages("forecast")
library(forecast)
library(readr)
names(data)
data <- read_csv("power.csv")
data
View(data)
data <- read_csv("power.csv")
data <- read_csv("power.csv")
data1 <- read_csv("power.csv")
data1 <- read_csv("power.csv")
data <- read_csv("power.csv")
data <- read_csv("power.csv")
data <- read_csv("power.csv")
setwd("C:/coding/r-ws/time series")
data <- read_csv("power.csv")
library(forecast)
library(readr)
data <- read_csv("power.csv")
head(data)
train_size <- 9 * 30 * 24 * 6  # 30 days * 24 hours * 6 observations per hour
zone1_power_ts <- ts(data$`Zone 1 Power Consumption`, frequency = 1)
zone1_power_train <- window(zone1_power_ts, end = c(1, train_size))
zone1_power_test <- window(zone1_power_ts, start = c(1, train_size + 1))
alpha <- 0.19
fit_es <- ets(zone1_power_train, alpha = alpha)
# Print model summary
print(fit_es)
# Forecast on the test set
forecast_power <- forecast(fit_es, h = length(zone1_power_test))
# Plot the forecast against actual test values
plot(forecast_power)
lines(zone1_power_test, col = 'red')
legend("topright", legend = c("Forecast", "Actual"), col = c("blue", "red"), lty = 1:1)
# Calculate accuracy of the forecast
accuracy(forecast_power, zone1_power_test)
alpha <- 0.3
fit_es <- ets(zone1_power_train, alpha = alpha)
# Print model summary
print(fit_es)
# Forecast on the test set
forecast_power <- forecast(fit_es, h = length(zone1_power_test))
# Plot the forecast against actual test values
plot(forecast_power)
lines(zone1_power_test, col = 'red')
legend("topright", legend = c("Forecast", "Actual"), col = c("blue", "red"), lty = 1:1)
# Calculate accuracy of the forecast
accuracy(forecast_power, zone1_power_test)
# Calculate accuracy of the forecast
accuracy(forecast_power)
# Calculate accuracy of the forecast
accuracy(forecast_power, zone1_power_test, test = zone1_power_test)
forecast_power
zone1_power_test
# Calculate accuracy of the forecast
accuracy(forecast_power, zone1_power_test)
accuracy_result <- accuracy(forecast_power, zone1_power_test)
# Print MAE
print(paste("Mean Absolute Error (MAE):", mae))
mae <- accuracy_result$MAE
# Print MAE
print(paste("Mean Absolute Error (MAE):", mae))
mae <- accuracy_result$MAE
accuracy_result <- accuracy(forecast_power, zone1_power_test)
# Access MAE
mae <- accuracy_result$MAE
mae <- accuracy_result[1]
# Print MAE
print(paste("Mean Absolute Error (MAE):", mae))
